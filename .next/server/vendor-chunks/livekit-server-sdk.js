"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/livekit-server-sdk";
exports.ids = ["vendor-chunks/livekit-server-sdk"];
exports.modules = {

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js":
/*!*************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/AccessToken.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* binding */ AccessToken),\n/* harmony export */   TokenVerifier: () => (/* binding */ TokenVerifier)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/index.js\");\n/* harmony import */ var _grants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./grants.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/grants.js\");\n\n\n// 6 hours\nconst defaultTTL = `6h`;\nclass AccessToken {\n    /**\n     * Creates a new AccessToken\n     * @param apiKey API Key, can be set in env LIVEKIT_API_KEY\n     * @param apiSecret Secret, can be set in env LIVEKIT_API_SECRET\n     */\n    constructor(apiKey, apiSecret, options) {\n        if (!apiKey) {\n            apiKey = process.env.LIVEKIT_API_KEY;\n        }\n        if (!apiSecret) {\n            apiSecret = process.env.LIVEKIT_API_SECRET;\n        }\n        if (!apiKey || !apiSecret) {\n            throw Error('api-key and api-secret must be set');\n        }\n        else if (typeof document !== 'undefined') {\n            // check against document rather than window because deno provides window\n            console.error('You should not include your API secret in your web client bundle.\\n\\n' +\n                'Your web client should request a token from your backend server which should then use ' +\n                'the API secret to generate a token. See https://docs.livekit.io/client/connect/');\n        }\n        this.apiKey = apiKey;\n        this.apiSecret = apiSecret;\n        this.grants = {};\n        this.identity = options === null || options === void 0 ? void 0 : options.identity;\n        this.ttl = (options === null || options === void 0 ? void 0 : options.ttl) || defaultTTL;\n        if (typeof this.ttl === 'number') {\n            this.ttl = `${this.ttl}s`;\n        }\n        if (options === null || options === void 0 ? void 0 : options.metadata) {\n            this.metadata = options.metadata;\n        }\n        if (options === null || options === void 0 ? void 0 : options.name) {\n            this.name = options.name;\n        }\n    }\n    /**\n     * Adds a video grant to this token.\n     * @param grant\n     */\n    addGrant(grant) {\n        var _a;\n        this.grants.video = Object.assign(Object.assign({}, ((_a = this.grants.video) !== null && _a !== void 0 ? _a : {})), grant);\n    }\n    /**\n     * Set metadata to be passed to the Participant, used only when joining the room\n     */\n    set metadata(md) {\n        this.grants.metadata = md;\n    }\n    set name(name) {\n        this.grants.name = name;\n    }\n    get sha256() {\n        return this.grants.sha256;\n    }\n    set sha256(sha) {\n        this.grants.sha256 = sha;\n    }\n    /**\n     * @returns JWT encoded token\n     */\n    async toJwt() {\n        // TODO: check for video grant validity\n        var _a;\n        const secret = new TextEncoder().encode(this.apiSecret);\n        const jwt = new jose__WEBPACK_IMPORTED_MODULE_0__.SignJWT((0,_grants_js__WEBPACK_IMPORTED_MODULE_1__.claimsToJwtPayload)(this.grants))\n            .setProtectedHeader({ alg: 'HS256' })\n            .setIssuer(this.apiKey)\n            .setExpirationTime(this.ttl)\n            .setNotBefore(0);\n        if (this.identity) {\n            jwt.setSubject(this.identity);\n        }\n        else if ((_a = this.grants.video) === null || _a === void 0 ? void 0 : _a.roomJoin) {\n            throw Error('identity is required for join but not set');\n        }\n        return jwt.sign(secret);\n    }\n}\nclass TokenVerifier {\n    constructor(apiKey, apiSecret) {\n        this.apiKey = apiKey;\n        this.apiSecret = apiSecret;\n    }\n    async verify(token) {\n        const secret = new TextEncoder().encode(this.apiSecret);\n        const { payload } = await jose__WEBPACK_IMPORTED_MODULE_0__.jwtVerify(token, secret, { issuer: this.apiKey });\n        if (!payload) {\n            throw Error('invalid token');\n        }\n        return payload;\n    }\n}\n//# sourceMappingURL=AccessToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvQWNjZXNzVG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2QjtBQUNvQjtBQUNqRDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsU0FBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELCtEQUErRDtBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlDQUFZLENBQUMsOERBQWtCO0FBQ3ZELGtDQUFrQyxjQUFjO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFVBQVUsUUFBUSwyQ0FBYyxrQkFBa0IscUJBQXFCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L0FjY2Vzc1Rva2VuLmpzPzliMzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgam9zZSBmcm9tICdqb3NlJztcbmltcG9ydCB7IGNsYWltc1RvSnd0UGF5bG9hZCB9IGZyb20gJy4vZ3JhbnRzLmpzJztcbi8vIDYgaG91cnNcbmNvbnN0IGRlZmF1bHRUVEwgPSBgNmhgO1xuZXhwb3J0IGNsYXNzIEFjY2Vzc1Rva2VuIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IEFjY2Vzc1Rva2VuXG4gICAgICogQHBhcmFtIGFwaUtleSBBUEkgS2V5LCBjYW4gYmUgc2V0IGluIGVudiBMSVZFS0lUX0FQSV9LRVlcbiAgICAgKiBAcGFyYW0gYXBpU2VjcmV0IFNlY3JldCwgY2FuIGJlIHNldCBpbiBlbnYgTElWRUtJVF9BUElfU0VDUkVUXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoYXBpS2V5LCBhcGlTZWNyZXQsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKCFhcGlLZXkpIHtcbiAgICAgICAgICAgIGFwaUtleSA9IHByb2Nlc3MuZW52LkxJVkVLSVRfQVBJX0tFWTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFwaVNlY3JldCkge1xuICAgICAgICAgICAgYXBpU2VjcmV0ID0gcHJvY2Vzcy5lbnYuTElWRUtJVF9BUElfU0VDUkVUO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYXBpS2V5IHx8ICFhcGlTZWNyZXQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdhcGkta2V5IGFuZCBhcGktc2VjcmV0IG11c3QgYmUgc2V0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgLy8gY2hlY2sgYWdhaW5zdCBkb2N1bWVudCByYXRoZXIgdGhhbiB3aW5kb3cgYmVjYXVzZSBkZW5vIHByb3ZpZGVzIHdpbmRvd1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignWW91IHNob3VsZCBub3QgaW5jbHVkZSB5b3VyIEFQSSBzZWNyZXQgaW4geW91ciB3ZWIgY2xpZW50IGJ1bmRsZS5cXG5cXG4nICtcbiAgICAgICAgICAgICAgICAnWW91ciB3ZWIgY2xpZW50IHNob3VsZCByZXF1ZXN0IGEgdG9rZW4gZnJvbSB5b3VyIGJhY2tlbmQgc2VydmVyIHdoaWNoIHNob3VsZCB0aGVuIHVzZSAnICtcbiAgICAgICAgICAgICAgICAndGhlIEFQSSBzZWNyZXQgdG8gZ2VuZXJhdGUgYSB0b2tlbi4gU2VlIGh0dHBzOi8vZG9jcy5saXZla2l0LmlvL2NsaWVudC9jb25uZWN0LycpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYXBpS2V5ID0gYXBpS2V5O1xuICAgICAgICB0aGlzLmFwaVNlY3JldCA9IGFwaVNlY3JldDtcbiAgICAgICAgdGhpcy5ncmFudHMgPSB7fTtcbiAgICAgICAgdGhpcy5pZGVudGl0eSA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5pZGVudGl0eTtcbiAgICAgICAgdGhpcy50dGwgPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnR0bCkgfHwgZGVmYXVsdFRUTDtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnR0bCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHRoaXMudHRsID0gYCR7dGhpcy50dGx9c2A7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5tZXRhZGF0YSkge1xuICAgICAgICAgICAgdGhpcy5tZXRhZGF0YSA9IG9wdGlvbnMubWV0YWRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5uYW1lKSB7XG4gICAgICAgICAgICB0aGlzLm5hbWUgPSBvcHRpb25zLm5hbWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBhIHZpZGVvIGdyYW50IHRvIHRoaXMgdG9rZW4uXG4gICAgICogQHBhcmFtIGdyYW50XG4gICAgICovXG4gICAgYWRkR3JhbnQoZ3JhbnQpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB0aGlzLmdyYW50cy52aWRlbyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgKChfYSA9IHRoaXMuZ3JhbnRzLnZpZGVvKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB7fSkpLCBncmFudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldCBtZXRhZGF0YSB0byBiZSBwYXNzZWQgdG8gdGhlIFBhcnRpY2lwYW50LCB1c2VkIG9ubHkgd2hlbiBqb2luaW5nIHRoZSByb29tXG4gICAgICovXG4gICAgc2V0IG1ldGFkYXRhKG1kKSB7XG4gICAgICAgIHRoaXMuZ3JhbnRzLm1ldGFkYXRhID0gbWQ7XG4gICAgfVxuICAgIHNldCBuYW1lKG5hbWUpIHtcbiAgICAgICAgdGhpcy5ncmFudHMubmFtZSA9IG5hbWU7XG4gICAgfVxuICAgIGdldCBzaGEyNTYoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyYW50cy5zaGEyNTY7XG4gICAgfVxuICAgIHNldCBzaGEyNTYoc2hhKSB7XG4gICAgICAgIHRoaXMuZ3JhbnRzLnNoYTI1NiA9IHNoYTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHJldHVybnMgSldUIGVuY29kZWQgdG9rZW5cbiAgICAgKi9cbiAgICBhc3luYyB0b0p3dCgpIHtcbiAgICAgICAgLy8gVE9ETzogY2hlY2sgZm9yIHZpZGVvIGdyYW50IHZhbGlkaXR5XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3Qgc2VjcmV0ID0gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHRoaXMuYXBpU2VjcmV0KTtcbiAgICAgICAgY29uc3Qgand0ID0gbmV3IGpvc2UuU2lnbkpXVChjbGFpbXNUb0p3dFBheWxvYWQodGhpcy5ncmFudHMpKVxuICAgICAgICAgICAgLnNldFByb3RlY3RlZEhlYWRlcih7IGFsZzogJ0hTMjU2JyB9KVxuICAgICAgICAgICAgLnNldElzc3Vlcih0aGlzLmFwaUtleSlcbiAgICAgICAgICAgIC5zZXRFeHBpcmF0aW9uVGltZSh0aGlzLnR0bClcbiAgICAgICAgICAgIC5zZXROb3RCZWZvcmUoMCk7XG4gICAgICAgIGlmICh0aGlzLmlkZW50aXR5KSB7XG4gICAgICAgICAgICBqd3Quc2V0U3ViamVjdCh0aGlzLmlkZW50aXR5KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgoX2EgPSB0aGlzLmdyYW50cy52aWRlbykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJvb21Kb2luKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignaWRlbnRpdHkgaXMgcmVxdWlyZWQgZm9yIGpvaW4gYnV0IG5vdCBzZXQnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gand0LnNpZ24oc2VjcmV0KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgVG9rZW5WZXJpZmllciB7XG4gICAgY29uc3RydWN0b3IoYXBpS2V5LCBhcGlTZWNyZXQpIHtcbiAgICAgICAgdGhpcy5hcGlLZXkgPSBhcGlLZXk7XG4gICAgICAgIHRoaXMuYXBpU2VjcmV0ID0gYXBpU2VjcmV0O1xuICAgIH1cbiAgICBhc3luYyB2ZXJpZnkodG9rZW4pIHtcbiAgICAgICAgY29uc3Qgc2VjcmV0ID0gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHRoaXMuYXBpU2VjcmV0KTtcbiAgICAgICAgY29uc3QgeyBwYXlsb2FkIH0gPSBhd2FpdCBqb3NlLmp3dFZlcmlmeSh0b2tlbiwgc2VjcmV0LCB7IGlzc3VlcjogdGhpcy5hcGlLZXkgfSk7XG4gICAgICAgIGlmICghcGF5bG9hZCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ2ludmFsaWQgdG9rZW4nKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGF5bG9hZDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BY2Nlc3NUb2tlbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/EgressClient.js":
/*!**************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/EgressClient.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EgressClient: () => (/* binding */ EgressClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = 'Egress';\n/**\n * Client to access Egress APIs\n */\nclass EgressClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     * @param host hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    async startRoomCompositeEgress(roomName, output, optsOrLayout, options, audioOnly, videoOnly, customBaseUrl) {\n        let layout;\n        if (optsOrLayout !== undefined) {\n            if (typeof optsOrLayout === 'string') {\n                layout = optsOrLayout;\n            }\n            else {\n                const opts = optsOrLayout;\n                layout = opts.layout;\n                options = opts.encodingOptions;\n                audioOnly = opts.audioOnly;\n                videoOnly = opts.videoOnly;\n                customBaseUrl = opts.customBaseUrl;\n            }\n        }\n        layout !== null && layout !== void 0 ? layout : (layout = '');\n        audioOnly !== null && audioOnly !== void 0 ? audioOnly : (audioOnly = false);\n        videoOnly !== null && videoOnly !== void 0 ? videoOnly : (videoOnly = false);\n        customBaseUrl !== null && customBaseUrl !== void 0 ? customBaseUrl : (customBaseUrl = '');\n        const { output: legacyOutput, options: egressOptions, fileOutputs, streamOutputs, segmentOutputs, imageOutputs, } = this.getOutputParams(output, options);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomCompositeEgressRequest({\n            roomName,\n            layout,\n            audioOnly,\n            videoOnly,\n            customBaseUrl,\n            output: legacyOutput,\n            options: egressOptions,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartRoomCompositeEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param url url\n     * @param output file or stream output\n     * @param opts WebOptions\n     */\n    async startWebEgress(url, output, opts) {\n        const audioOnly = (opts === null || opts === void 0 ? void 0 : opts.audioOnly) || false;\n        const videoOnly = (opts === null || opts === void 0 ? void 0 : opts.videoOnly) || false;\n        const awaitStartSignal = (opts === null || opts === void 0 ? void 0 : opts.awaitStartSignal) || false;\n        const { output: legacyOutput, options, fileOutputs, streamOutputs, segmentOutputs, imageOutputs, } = this.getOutputParams(output, opts === null || opts === void 0 ? void 0 : opts.encodingOptions);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebEgressRequest({\n            url,\n            audioOnly,\n            videoOnly,\n            awaitStartSignal,\n            output: legacyOutput,\n            options,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartWebEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * Export a participant's audio and video tracks,\n     *\n     * @param roomName room name\n     * @param output one or more outputs\n     * @param opts ParticipantEgressOptions\n     */\n    async startParticipantEgress(roomName, identity, output, opts) {\n        const { options, fileOutputs, streamOutputs, segmentOutputs, imageOutputs } = this.getOutputParams(output, opts === null || opts === void 0 ? void 0 : opts.encodingOptions);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantEgressRequest({\n            roomName,\n            identity,\n            options,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartParticipantEgress', req, this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    async startTrackCompositeEgress(roomName, output, optsOrAudioTrackId, videoTrackId, options) {\n        let audioTrackId;\n        if (optsOrAudioTrackId !== undefined) {\n            if (typeof optsOrAudioTrackId === 'string') {\n                audioTrackId = optsOrAudioTrackId;\n            }\n            else {\n                const opts = optsOrAudioTrackId;\n                audioTrackId = opts.audioTrackId;\n                videoTrackId = opts.videoTrackId;\n                options = opts.encodingOptions;\n            }\n        }\n        audioTrackId !== null && audioTrackId !== void 0 ? audioTrackId : (audioTrackId = '');\n        videoTrackId !== null && videoTrackId !== void 0 ? videoTrackId : (videoTrackId = '');\n        const { output: legacyOutput, options: egressOptions, fileOutputs, streamOutputs, segmentOutputs, imageOutputs, } = this.getOutputParams(output, options);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackCompositeEgressRequest({\n            roomName,\n            audioTrackId,\n            videoTrackId,\n            output: legacyOutput,\n            options: egressOptions,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartTrackCompositeEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    isEncodedOutputs(output) {\n        return (output.file !== undefined ||\n            output.stream !== undefined ||\n            output.segments !== undefined);\n    }\n    isEncodedFileOutput(output) {\n        return (output.filepath !== undefined ||\n            output.fileType !== undefined);\n    }\n    isSegmentedFileOutput(output) {\n        return (output.filenamePrefix !== undefined ||\n            output.playlistName !== undefined ||\n            output.filenameSuffix !== undefined);\n    }\n    isStreamOutput(output) {\n        return (output.protocol !== undefined || output.urls !== undefined);\n    }\n    getOutputParams(output, opts) {\n        let file;\n        let fileOutputs;\n        let stream;\n        let streamOutputs;\n        let segments;\n        let segmentOutputs;\n        let imageOutputs;\n        if (this.isEncodedOutputs(output)) {\n            if (output.file !== undefined) {\n                fileOutputs = [output.file];\n            }\n            if (output.stream !== undefined) {\n                streamOutputs = [output.stream];\n            }\n            if (output.segments !== undefined) {\n                segmentOutputs = [output.segments];\n            }\n            if (output.images !== undefined) {\n                imageOutputs = [output.images];\n            }\n        }\n        else if (this.isEncodedFileOutput(output)) {\n            file = output;\n            fileOutputs = [file];\n        }\n        else if (this.isSegmentedFileOutput(output)) {\n            segments = output;\n            segmentOutputs = [segments];\n        }\n        else if (this.isStreamOutput(output)) {\n            stream = output;\n            streamOutputs = [stream];\n        }\n        let legacyOutput;\n        if (file) {\n            legacyOutput = {\n                case: 'file',\n                value: file,\n            };\n        }\n        else if (stream) {\n            legacyOutput = {\n                case: 'stream',\n                value: stream,\n            };\n        }\n        else if (segments) {\n            legacyOutput = {\n                case: 'segments',\n                value: segments,\n            };\n        }\n        let egressOptions;\n        if (opts) {\n            if (typeof opts === 'number') {\n                egressOptions = {\n                    case: 'preset',\n                    value: opts,\n                };\n            }\n            else {\n                egressOptions = {\n                    case: 'advanced',\n                    value: opts,\n                };\n            }\n        }\n        return {\n            output: legacyOutput,\n            options: egressOptions,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        };\n    }\n    /**\n     * @param roomName room name\n     * @param output file or websocket output\n     * @param trackId track Id\n     */\n    async startTrackEgress(roomName, output, trackId) {\n        let legacyOutput;\n        if (typeof output === 'string') {\n            legacyOutput = {\n                case: 'websocketUrl',\n                value: output,\n            };\n        }\n        else {\n            legacyOutput = {\n                case: 'file',\n                value: output,\n            };\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackEgressRequest({\n            roomName,\n            trackId,\n            output: legacyOutput,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartTrackEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param egressId\n     * @param layout\n     */\n    async updateLayout(egressId, layout) {\n        const data = await this.rpc.request(svc, 'UpdateLayout', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateLayoutRequest({ egressId, layout }).toJson(), await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param egressId\n     * @param addOutputUrls\n     * @param removeOutputUrls\n     */\n    async updateStream(egressId, addOutputUrls, removeOutputUrls) {\n        addOutputUrls !== null && addOutputUrls !== void 0 ? addOutputUrls : (addOutputUrls = []);\n        removeOutputUrls !== null && removeOutputUrls !== void 0 ? removeOutputUrls : (removeOutputUrls = []);\n        const data = await this.rpc.request(svc, 'UpdateStream', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateStreamRequest({ egressId, addOutputUrls, removeOutputUrls }).toJson(), await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param roomName list egress for one room only\n     */\n    async listEgress(options) {\n        var _a;\n        let req = {};\n        if (typeof options === 'string') {\n            req.roomName = options;\n        }\n        else if (options !== undefined) {\n            req = options;\n        }\n        const data = await this.rpc.request(svc, 'ListEgress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListEgressRequest(req).toJson(), await this.authHeader({ roomRecord: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListEgressResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param egressId\n     */\n    async stopEgress(egressId) {\n        const data = await this.rpc.request(svc, 'StopEgress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StopEgressRequest({ egressId }).toJson(), await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n}\n//# sourceMappingURL=EgressClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/EgressClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/IngressClient.js":
/*!***************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/IngressClient.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IngressClient: () => (/* binding */ IngressClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = 'Ingress';\n/**\n * Client to access Ingress APIs\n */\nclass IngressClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     * @param host hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    /**\n     * @param inputType protocol for the ingress\n     * @param opts CreateIngressOptions\n     */\n    async createIngress(inputType, opts) {\n        let name = '';\n        let roomName = '';\n        let participantName = '';\n        let participantIdentity = '';\n        let participantMetadata;\n        let bypassTranscoding = false;\n        let enableTranscoding;\n        let url = '';\n        let audio;\n        let video;\n        if (opts !== undefined) {\n            name = opts.name || '';\n            roomName = opts.roomName || '';\n            participantName = opts.participantName || '';\n            participantIdentity = opts.participantIdentity || '';\n            bypassTranscoding = opts.bypassTranscoding || false;\n            enableTranscoding = opts.enableTranscoding;\n            url = opts.url || '';\n            audio = opts.audio;\n            video = opts.video;\n            participantMetadata = opts.participantMetadata;\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateIngressRequest({\n            inputType,\n            name,\n            roomName,\n            participantIdentity,\n            participantMetadata,\n            participantName,\n            bypassTranscoding,\n            enableTranscoding,\n            url,\n            audio,\n            video,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateIngress', req, await this.authHeader({ ingressAdmin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param ingressId ID of the ingress to update\n     * @param opts UpdateIngressOptions\n     */\n    async updateIngress(ingressId, opts) {\n        const name = opts.name || '';\n        const roomName = opts.roomName || '';\n        const participantName = opts.participantName || '';\n        const participantIdentity = opts.participantIdentity || '';\n        const { participantMetadata } = opts;\n        const { audio, video, bypassTranscoding, enableTranscoding } = opts;\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateIngressRequest({\n            ingressId,\n            name,\n            roomName,\n            participantIdentity,\n            participantName,\n            participantMetadata,\n            bypassTranscoding,\n            enableTranscoding,\n            audio,\n            video,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'UpdateIngress', req, await this.authHeader({ ingressAdmin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    async listIngress(arg) {\n        var _a;\n        let req = {};\n        if (typeof arg === 'string') {\n            req.roomName = arg;\n        }\n        else if (arg) {\n            req = arg;\n        }\n        const data = await this.rpc.request(svc, 'ListIngress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListIngressRequest(req).toJson(), await this.authHeader({ ingressAdmin: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListIngressResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param ingressId ingress to delete\n     */\n    async deleteIngress(ingressId) {\n        const data = await this.rpc.request(svc, 'DeleteIngress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteIngressRequest({ ingressId }).toJson(), await this.authHeader({ ingressAdmin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n}\n//# sourceMappingURL=IngressClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvSW5ncmVzc0NsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTRKO0FBQ2pIO0FBQ2M7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0QkFBNEIsdURBQVc7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsa0RBQVEsT0FBTyx3REFBYztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtRUFBb0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCwrRkFBK0Ysb0JBQW9CO0FBQ25ILGVBQWUsMERBQVcsa0JBQWtCLDJCQUEyQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixzQkFBc0I7QUFDdEMsZ0JBQWdCLHFEQUFxRDtBQUNyRSx3QkFBd0IsbUVBQW9CO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULCtGQUErRixvQkFBb0I7QUFDbkgsZUFBZSwwREFBVyxrQkFBa0IsMkJBQTJCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLGlFQUFrQix3Q0FBd0Msb0JBQW9CO0FBQ2xKLHFCQUFxQixrRUFBbUIsa0JBQWtCLDJCQUEyQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLG1FQUFvQixHQUFHLFdBQVcsb0NBQW9DLG9CQUFvQjtBQUNoSyxlQUFlLDBEQUFXLGtCQUFrQiwyQkFBMkI7QUFDdkU7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L0luZ3Jlc3NDbGllbnQuanM/N2JiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVhdGVJbmdyZXNzUmVxdWVzdCwgRGVsZXRlSW5ncmVzc1JlcXVlc3QsIEluZ3Jlc3NJbmZvLCBMaXN0SW5ncmVzc1JlcXVlc3QsIExpc3RJbmdyZXNzUmVzcG9uc2UsIFVwZGF0ZUluZ3Jlc3NSZXF1ZXN0LCB9IGZyb20gJ0BsaXZla2l0L3Byb3RvY29sJztcbmltcG9ydCBTZXJ2aWNlQmFzZSBmcm9tICcuL1NlcnZpY2VCYXNlLmpzJztcbmltcG9ydCB7IFR3aXJwUnBjLCBsaXZla2l0UGFja2FnZSB9IGZyb20gJy4vVHdpcnBSUEMuanMnO1xuY29uc3Qgc3ZjID0gJ0luZ3Jlc3MnO1xuLyoqXG4gKiBDbGllbnQgdG8gYWNjZXNzIEluZ3Jlc3MgQVBJc1xuICovXG5leHBvcnQgY2xhc3MgSW5ncmVzc0NsaWVudCBleHRlbmRzIFNlcnZpY2VCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gaG9zdCBob3N0bmFtZSBpbmNsdWRpbmcgcHJvdG9jb2wuIGkuZS4gJ2h0dHBzOi8vY2x1c3Rlci5saXZla2l0LmlvJ1xuICAgICAqIEBwYXJhbSBhcGlLZXkgQVBJIEtleSwgY2FuIGJlIHNldCBpbiBlbnYgdmFyIExJVkVLSVRfQVBJX0tFWVxuICAgICAqIEBwYXJhbSBzZWNyZXQgQVBJIFNlY3JldCwgY2FuIGJlIHNldCBpbiBlbnYgdmFyIExJVkVLSVRfQVBJX1NFQ1JFVFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGhvc3QsIGFwaUtleSwgc2VjcmV0KSB7XG4gICAgICAgIHN1cGVyKGFwaUtleSwgc2VjcmV0KTtcbiAgICAgICAgdGhpcy5ycGMgPSBuZXcgVHdpcnBScGMoaG9zdCwgbGl2ZWtpdFBhY2thZ2UpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gaW5wdXRUeXBlIHByb3RvY29sIGZvciB0aGUgaW5ncmVzc1xuICAgICAqIEBwYXJhbSBvcHRzIENyZWF0ZUluZ3Jlc3NPcHRpb25zXG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlSW5ncmVzcyhpbnB1dFR5cGUsIG9wdHMpIHtcbiAgICAgICAgbGV0IG5hbWUgPSAnJztcbiAgICAgICAgbGV0IHJvb21OYW1lID0gJyc7XG4gICAgICAgIGxldCBwYXJ0aWNpcGFudE5hbWUgPSAnJztcbiAgICAgICAgbGV0IHBhcnRpY2lwYW50SWRlbnRpdHkgPSAnJztcbiAgICAgICAgbGV0IHBhcnRpY2lwYW50TWV0YWRhdGE7XG4gICAgICAgIGxldCBieXBhc3NUcmFuc2NvZGluZyA9IGZhbHNlO1xuICAgICAgICBsZXQgZW5hYmxlVHJhbnNjb2Rpbmc7XG4gICAgICAgIGxldCB1cmwgPSAnJztcbiAgICAgICAgbGV0IGF1ZGlvO1xuICAgICAgICBsZXQgdmlkZW87XG4gICAgICAgIGlmIChvcHRzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG5hbWUgPSBvcHRzLm5hbWUgfHwgJyc7XG4gICAgICAgICAgICByb29tTmFtZSA9IG9wdHMucm9vbU5hbWUgfHwgJyc7XG4gICAgICAgICAgICBwYXJ0aWNpcGFudE5hbWUgPSBvcHRzLnBhcnRpY2lwYW50TmFtZSB8fCAnJztcbiAgICAgICAgICAgIHBhcnRpY2lwYW50SWRlbnRpdHkgPSBvcHRzLnBhcnRpY2lwYW50SWRlbnRpdHkgfHwgJyc7XG4gICAgICAgICAgICBieXBhc3NUcmFuc2NvZGluZyA9IG9wdHMuYnlwYXNzVHJhbnNjb2RpbmcgfHwgZmFsc2U7XG4gICAgICAgICAgICBlbmFibGVUcmFuc2NvZGluZyA9IG9wdHMuZW5hYmxlVHJhbnNjb2Rpbmc7XG4gICAgICAgICAgICB1cmwgPSBvcHRzLnVybCB8fCAnJztcbiAgICAgICAgICAgIGF1ZGlvID0gb3B0cy5hdWRpbztcbiAgICAgICAgICAgIHZpZGVvID0gb3B0cy52aWRlbztcbiAgICAgICAgICAgIHBhcnRpY2lwYW50TWV0YWRhdGEgPSBvcHRzLnBhcnRpY2lwYW50TWV0YWRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVxID0gbmV3IENyZWF0ZUluZ3Jlc3NSZXF1ZXN0KHtcbiAgICAgICAgICAgIGlucHV0VHlwZSxcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICByb29tTmFtZSxcbiAgICAgICAgICAgIHBhcnRpY2lwYW50SWRlbnRpdHksXG4gICAgICAgICAgICBwYXJ0aWNpcGFudE1ldGFkYXRhLFxuICAgICAgICAgICAgcGFydGljaXBhbnROYW1lLFxuICAgICAgICAgICAgYnlwYXNzVHJhbnNjb2RpbmcsXG4gICAgICAgICAgICBlbmFibGVUcmFuc2NvZGluZyxcbiAgICAgICAgICAgIHVybCxcbiAgICAgICAgICAgIGF1ZGlvLFxuICAgICAgICAgICAgdmlkZW8sXG4gICAgICAgIH0pLnRvSnNvbigpO1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChzdmMsICdDcmVhdGVJbmdyZXNzJywgcmVxLCBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyBpbmdyZXNzQWRtaW46IHRydWUgfSkpO1xuICAgICAgICByZXR1cm4gSW5ncmVzc0luZm8uZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gaW5ncmVzc0lkIElEIG9mIHRoZSBpbmdyZXNzIHRvIHVwZGF0ZVxuICAgICAqIEBwYXJhbSBvcHRzIFVwZGF0ZUluZ3Jlc3NPcHRpb25zXG4gICAgICovXG4gICAgYXN5bmMgdXBkYXRlSW5ncmVzcyhpbmdyZXNzSWQsIG9wdHMpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IG9wdHMubmFtZSB8fCAnJztcbiAgICAgICAgY29uc3Qgcm9vbU5hbWUgPSBvcHRzLnJvb21OYW1lIHx8ICcnO1xuICAgICAgICBjb25zdCBwYXJ0aWNpcGFudE5hbWUgPSBvcHRzLnBhcnRpY2lwYW50TmFtZSB8fCAnJztcbiAgICAgICAgY29uc3QgcGFydGljaXBhbnRJZGVudGl0eSA9IG9wdHMucGFydGljaXBhbnRJZGVudGl0eSB8fCAnJztcbiAgICAgICAgY29uc3QgeyBwYXJ0aWNpcGFudE1ldGFkYXRhIH0gPSBvcHRzO1xuICAgICAgICBjb25zdCB7IGF1ZGlvLCB2aWRlbywgYnlwYXNzVHJhbnNjb2RpbmcsIGVuYWJsZVRyYW5zY29kaW5nIH0gPSBvcHRzO1xuICAgICAgICBjb25zdCByZXEgPSBuZXcgVXBkYXRlSW5ncmVzc1JlcXVlc3Qoe1xuICAgICAgICAgICAgaW5ncmVzc0lkLFxuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIHJvb21OYW1lLFxuICAgICAgICAgICAgcGFydGljaXBhbnRJZGVudGl0eSxcbiAgICAgICAgICAgIHBhcnRpY2lwYW50TmFtZSxcbiAgICAgICAgICAgIHBhcnRpY2lwYW50TWV0YWRhdGEsXG4gICAgICAgICAgICBieXBhc3NUcmFuc2NvZGluZyxcbiAgICAgICAgICAgIGVuYWJsZVRyYW5zY29kaW5nLFxuICAgICAgICAgICAgYXVkaW8sXG4gICAgICAgICAgICB2aWRlbyxcbiAgICAgICAgfSkudG9Kc29uKCk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KHN2YywgJ1VwZGF0ZUluZ3Jlc3MnLCByZXEsIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IGluZ3Jlc3NBZG1pbjogdHJ1ZSB9KSk7XG4gICAgICAgIHJldHVybiBJbmdyZXNzSW5mby5mcm9tSnNvbihkYXRhLCB7IGlnbm9yZVVua25vd25GaWVsZHM6IHRydWUgfSk7XG4gICAgfVxuICAgIGFzeW5jIGxpc3RJbmdyZXNzKGFyZykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGxldCByZXEgPSB7fTtcbiAgICAgICAgaWYgKHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXEucm9vbU5hbWUgPSBhcmc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYXJnKSB7XG4gICAgICAgICAgICByZXEgPSBhcmc7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3Qoc3ZjLCAnTGlzdEluZ3Jlc3MnLCBuZXcgTGlzdEluZ3Jlc3NSZXF1ZXN0KHJlcSkudG9Kc29uKCksIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IGluZ3Jlc3NBZG1pbjogdHJ1ZSB9KSk7XG4gICAgICAgIHJldHVybiAoX2EgPSBMaXN0SW5ncmVzc1Jlc3BvbnNlLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KS5pdGVtcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW107XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSBpbmdyZXNzSWQgaW5ncmVzcyB0byBkZWxldGVcbiAgICAgKi9cbiAgICBhc3luYyBkZWxldGVJbmdyZXNzKGluZ3Jlc3NJZCkge1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChzdmMsICdEZWxldGVJbmdyZXNzJywgbmV3IERlbGV0ZUluZ3Jlc3NSZXF1ZXN0KHsgaW5ncmVzc0lkIH0pLnRvSnNvbigpLCBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyBpbmdyZXNzQWRtaW46IHRydWUgfSkpO1xuICAgICAgICByZXR1cm4gSW5ncmVzc0luZm8uZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUluZ3Jlc3NDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/IngressClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/RoomServiceClient.js":
/*!*******************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/RoomServiceClient.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RoomServiceClient: () => (/* binding */ RoomServiceClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = 'RoomService';\n/**\n * Client to access Room APIs\n */\nclass RoomServiceClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     *\n     * @param host hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    /**\n     * Creates a new room. Explicit room creation is not required, since rooms will\n     * be automatically created when the first participant joins. This method can be\n     * used to customize room settings.\n     * @param options\n     */\n    async createRoom(options) {\n        const data = await this.rpc.request(svc, 'CreateRoom', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateRoomRequest(options).toJson(), await this.authHeader({ roomCreate: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * List active rooms\n     * @param names when undefined or empty, list all rooms.\n     *              otherwise returns rooms with matching names\n     * @returns\n     */\n    async listRooms(names) {\n        var _a;\n        const data = await this.rpc.request(svc, 'ListRooms', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListRoomsRequest({ names: names !== null && names !== void 0 ? names : [] }).toJson(), await this.authHeader({ roomList: true }));\n        const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListRoomsResponse.fromJson(data, { ignoreUnknownFields: true });\n        return (_a = res.rooms) !== null && _a !== void 0 ? _a : [];\n    }\n    async deleteRoom(room) {\n        await this.rpc.request(svc, 'DeleteRoom', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteRoomRequest({ room }).toJson(), await this.authHeader({ roomCreate: true }));\n    }\n    /**\n     * Update metadata of a room\n     * @param room name of the room\n     * @param metadata the new metadata for the room\n     */\n    async updateRoomMetadata(room, metadata) {\n        const data = await this.rpc.request(svc, 'UpdateRoomMetadata', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateRoomMetadataRequest({ room, metadata }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * List participants in a room\n     * @param room name of the room\n     */\n    async listParticipants(room) {\n        var _a;\n        const data = await this.rpc.request(svc, 'ListParticipants', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListParticipantsRequest({ room }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n        const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListParticipantsResponse.fromJson(data, { ignoreUnknownFields: true });\n        return (_a = res.participants) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Get information on a specific participant, including the tracks that participant\n     * has published\n     * @param room name of the room\n     * @param identity identity of the participant to return\n     */\n    async getParticipant(room, identity) {\n        const data = await this.rpc.request(svc, 'GetParticipant', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomParticipantIdentity({ room, identity }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * Removes a participant in the room. This will disconnect the participant\n     * and will emit a Disconnected event for that participant.\n     * Even after being removed, the participant can still re-join the room.\n     * @param room\n     * @param identity\n     */\n    async removeParticipant(room, identity) {\n        await this.rpc.request(svc, 'RemoveParticipant', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomParticipantIdentity({ room, identity }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n    }\n    /**\n     * Mutes a track that the participant has published.\n     * @param room\n     * @param identity\n     * @param trackSid sid of the track to be muted\n     * @param muted true to mute, false to unmute\n     */\n    async mutePublishedTrack(room, identity, trackSid, muted) {\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.MuteRoomTrackRequest({\n            room,\n            identity,\n            trackSid,\n            muted,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'MutePublishedTrack', req, await this.authHeader({ roomAdmin: true, room }));\n        const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.MuteRoomTrackResponse.fromJson(data, { ignoreUnknownFields: true });\n        return res.track;\n    }\n    /**\n     * Updates a participant's metadata or permissions\n     * @param room\n     * @param identity\n     * @param metadata optional, metadata to update\n     * @param permission optional, new permissions to assign to participant\n     * @param name optional, new name for participant\n     */\n    async updateParticipant(room, identity, metadata, permission, name) {\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateParticipantRequest({\n            room,\n            identity,\n            metadata: metadata || '',\n            name: name || '',\n        });\n        if (permission) {\n            req.permission = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantPermission(permission);\n        }\n        const data = await this.rpc.request(svc, 'UpdateParticipant', req.toJson(), await this.authHeader({ roomAdmin: true, room }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * Updates a participant's subscription to tracks\n     * @param room\n     * @param identity\n     * @param trackSids\n     * @param subscribe true to subscribe, false to unsubscribe\n     */\n    async updateSubscriptions(room, identity, trackSids, subscribe) {\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateSubscriptionsRequest({\n            room,\n            identity,\n            trackSids,\n            subscribe,\n            participantTracks: [],\n        }).toJson();\n        await this.rpc.request(svc, 'UpdateSubscriptions', req, await this.authHeader({ roomAdmin: true, room }));\n    }\n    async sendData(room, data, kind, options = {}) {\n        const destinationSids = Array.isArray(options) ? options : options.destinationSids;\n        const topic = Array.isArray(options) ? undefined : options.topic;\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SendDataRequest({\n            room,\n            data,\n            kind,\n            destinationSids: destinationSids !== null && destinationSids !== void 0 ? destinationSids : [],\n            topic,\n        });\n        if (!Array.isArray(options) && options.destinationIdentities) {\n            req.destinationIdentities = options.destinationIdentities;\n        }\n        await this.rpc.request(svc, 'SendData', req.toJson(), await this.authHeader({ roomAdmin: true, room }));\n    }\n}\n//# sourceMappingURL=RoomServiceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/RoomServiceClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js":
/*!*************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/ServiceBase.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ServiceBase)\n/* harmony export */ });\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\");\n\n/**\n * Utilities to handle authentication\n */\nclass ServiceBase {\n    /**\n     * @param apiKey API Key.\n     * @param secret API Secret.\n     * @param ttl token TTL\n     */\n    constructor(apiKey, secret, ttl) {\n        this.apiKey = apiKey;\n        this.secret = secret;\n        this.ttl = ttl || '10m';\n    }\n    async authHeader(grant) {\n        const at = new _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__.AccessToken(this.apiKey, this.secret, { ttl: this.ttl });\n        at.addGrant(grant);\n        return {\n            Authorization: `Bearer ${await at.toJwt()}`,\n        };\n    }\n}\n//# sourceMappingURL=ServiceBase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvU2VydmljZUJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHdEQUFXLDZCQUE2QixlQUFlO0FBQzlFO0FBQ0E7QUFDQSxxQ0FBcUMsaUJBQWlCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L1NlcnZpY2VCYXNlLmpzPzkzNjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWNjZXNzVG9rZW4gfSBmcm9tICcuL0FjY2Vzc1Rva2VuLmpzJztcbi8qKlxuICogVXRpbGl0aWVzIHRvIGhhbmRsZSBhdXRoZW50aWNhdGlvblxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZXJ2aWNlQmFzZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGFwaUtleSBBUEkgS2V5LlxuICAgICAqIEBwYXJhbSBzZWNyZXQgQVBJIFNlY3JldC5cbiAgICAgKiBAcGFyYW0gdHRsIHRva2VuIFRUTFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGFwaUtleSwgc2VjcmV0LCB0dGwpIHtcbiAgICAgICAgdGhpcy5hcGlLZXkgPSBhcGlLZXk7XG4gICAgICAgIHRoaXMuc2VjcmV0ID0gc2VjcmV0O1xuICAgICAgICB0aGlzLnR0bCA9IHR0bCB8fCAnMTBtJztcbiAgICB9XG4gICAgYXN5bmMgYXV0aEhlYWRlcihncmFudCkge1xuICAgICAgICBjb25zdCBhdCA9IG5ldyBBY2Nlc3NUb2tlbih0aGlzLmFwaUtleSwgdGhpcy5zZWNyZXQsIHsgdHRsOiB0aGlzLnR0bCB9KTtcbiAgICAgICAgYXQuYWRkR3JhbnQoZ3JhbnQpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2F3YWl0IGF0LnRvSnd0KCl9YCxcbiAgICAgICAgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJ2aWNlQmFzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/SipClient.js":
/*!***********************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/SipClient.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SipClient: () => (/* binding */ SipClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = 'SIP';\n/**\n * Client to access Egress APIs\n */\nclass SipClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     * @param host hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    /**\n     * @param number phone number of the trunk\n     * @param opts CreateSipTrunkOptions\n     */\n    async createSipTrunk(number, opts) {\n        let inboundAddresses;\n        let inboundNumbers;\n        let inboundUsername = '';\n        let inboundPassword = '';\n        let outboundAddress = '';\n        let outboundUsername = '';\n        let outboundPassword = '';\n        if (opts !== undefined) {\n            inboundAddresses = opts.inbound_addresses;\n            inboundNumbers = opts.inbound_numbers;\n            inboundUsername = opts.inbound_username || '';\n            inboundPassword = opts.inbound_password || '';\n            outboundAddress = opts.outbound_address || '';\n            outboundUsername = opts.outbound_username || '';\n            outboundPassword = opts.outbound_password || '';\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPTrunkRequest({\n            inboundAddresses: inboundAddresses,\n            inboundNumbers: inboundNumbers,\n            inboundUsername: inboundUsername,\n            inboundPassword: inboundPassword,\n            outboundNumber: number,\n            outboundAddress: outboundAddress,\n            outboundUsername: outboundUsername,\n            outboundPassword: outboundPassword,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPTrunk', req, await this.authHeader({}));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    async listSipTrunk() {\n        var _a;\n        let req = {};\n        const data = await this.rpc.request(svc, 'ListSIPTrunk', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPTrunkRequest(req).toJson(), await this.authHeader({}));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param sipTrunkId sip trunk to delete\n     */\n    async deleteSipTrunk(sipTrunkId) {\n        const data = await this.rpc.request(svc, 'DeleteSIPTrunk', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteSIPTrunkRequest({ sipTrunkId }).toJson(), await this.authHeader({}));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param rule sip dispatch rule\n     * @param opts CreateSipDispatchRuleOptions\n     */\n    async createSipDispatchRule(rule, opts) {\n        let trunkIds;\n        let hidePhoneNumber = false;\n        let ruleProto = undefined;\n        if (opts !== undefined) {\n            trunkIds = opts.trunkIds;\n            hidePhoneNumber = opts.hidePhoneNumber || false;\n        }\n        if (rule.type == 'direct') {\n            ruleProto = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRule({\n                rule: {\n                    case: 'dispatchRuleDirect',\n                    value: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleDirect({\n                        roomName: rule.roomName,\n                        pin: rule.pin || '',\n                    }),\n                },\n            });\n        }\n        else if (rule.type == 'individual') {\n            ruleProto = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRule({\n                rule: {\n                    case: 'dispatchRuleIndividual',\n                    value: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleIndividual({\n                        roomPrefix: rule.roomPrefix,\n                        pin: rule.pin || '',\n                    }),\n                },\n            });\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPDispatchRuleRequest({\n            rule: ruleProto,\n            trunkIds: trunkIds,\n            hidePhoneNumber: hidePhoneNumber,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPDispatchRule', req, await this.authHeader({}));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    async listSipDispatchRule() {\n        var _a;\n        let req = {};\n        const data = await this.rpc.request(svc, 'ListSIPDispatchRule', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPDispatchRuleRequest(req).toJson(), await this.authHeader({}));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPDispatchRuleResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param sipDispatchRuleId sip trunk to delete\n     */\n    async deleteSipDispatchRule(sipDispatchRuleId) {\n        const data = await this.rpc.request(svc, 'DeleteSIPDispatchRule', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteSIPDispatchRuleRequest({ sipDispatchRuleId }).toJson(), await this.authHeader({}));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param sipTrunkId sip trunk to use for the call\n     * @param number number to dial\n     * @param roomName room to attach the call to\n     * @param opts CreateSipParticipantOptions\n     */\n    async createSipParticipant(sipTrunkId, number, roomName, opts) {\n        let participantIdentity = '';\n        let participantName = '';\n        let dtmf = '';\n        let playRingtone = false;\n        if (opts !== undefined) {\n            participantIdentity = opts.participantIdentity || '';\n            participantName = opts.participantName || '';\n            dtmf = opts.dtmf || '';\n            playRingtone = opts.playRingtone || false;\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPParticipantRequest({\n            sipTrunkId: sipTrunkId,\n            sipCallTo: number,\n            roomName: roomName,\n            participantIdentity: participantIdentity,\n            participantName: participantName,\n            dtmf: dtmf,\n            playRingtone: playRingtone,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPParticipant', req, await this.authHeader({}));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n}\n//# sourceMappingURL=SipClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/SipClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js":
/*!**********************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/TwirpRPC.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwirpRpc: () => (/* binding */ TwirpRpc),\n/* harmony export */   livekitPackage: () => (/* binding */ livekitPackage)\n/* harmony export */ });\n/* harmony import */ var camelcase_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! camelcase-keys */ \"(rsc)/./node_modules/camelcase-keys/index.js\");\n\n// twirp RPC adapter for client implementation\nconst defaultPrefix = '/twirp';\nconst livekitPackage = 'livekit';\n/**\n * JSON based Twirp V7 RPC\n */\nclass TwirpRpc {\n    constructor(host, pkg, prefix) {\n        if (host.startsWith('ws')) {\n            host = host.replace('ws', 'http');\n        }\n        this.host = host;\n        this.pkg = pkg;\n        this.prefix = prefix || defaultPrefix;\n    }\n    async request(service, method, data, headers) {\n        const path = `${this.prefix}/${this.pkg}.${service}/${method}`;\n        const url = new URL(path, this.host);\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, headers),\n            body: JSON.stringify(data),\n        });\n        if (!response.ok) {\n            throw new Error(`Request failed with status ${response.status}: ${response.statusText}`);\n        }\n        const parsedResp = await response.json();\n        return (0,camelcase_keys__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(parsedResp, { deep: true });\n    }\n}\n//# sourceMappingURL=TwirpRPC.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvVHdpcnBSUEMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQzNDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVksR0FBRyxTQUFTLEdBQUcsUUFBUSxHQUFHLE9BQU87QUFDckU7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGtDQUFrQyxnQkFBZ0I7QUFDdkY7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwwREFBMEQsZ0JBQWdCLElBQUksb0JBQW9CO0FBQ2xHO0FBQ0E7QUFDQSxlQUFlLDBEQUFhLGVBQWUsWUFBWTtBQUN2RDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvVHdpcnBSUEMuanM/MThlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2FtZWxjYXNlS2V5cyBmcm9tICdjYW1lbGNhc2Uta2V5cyc7XG4vLyB0d2lycCBSUEMgYWRhcHRlciBmb3IgY2xpZW50IGltcGxlbWVudGF0aW9uXG5jb25zdCBkZWZhdWx0UHJlZml4ID0gJy90d2lycCc7XG5leHBvcnQgY29uc3QgbGl2ZWtpdFBhY2thZ2UgPSAnbGl2ZWtpdCc7XG4vKipcbiAqIEpTT04gYmFzZWQgVHdpcnAgVjcgUlBDXG4gKi9cbmV4cG9ydCBjbGFzcyBUd2lycFJwYyB7XG4gICAgY29uc3RydWN0b3IoaG9zdCwgcGtnLCBwcmVmaXgpIHtcbiAgICAgICAgaWYgKGhvc3Quc3RhcnRzV2l0aCgnd3MnKSkge1xuICAgICAgICAgICAgaG9zdCA9IGhvc3QucmVwbGFjZSgnd3MnLCAnaHR0cCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaG9zdCA9IGhvc3Q7XG4gICAgICAgIHRoaXMucGtnID0gcGtnO1xuICAgICAgICB0aGlzLnByZWZpeCA9IHByZWZpeCB8fCBkZWZhdWx0UHJlZml4O1xuICAgIH1cbiAgICBhc3luYyByZXF1ZXN0KHNlcnZpY2UsIG1ldGhvZCwgZGF0YSwgaGVhZGVycykge1xuICAgICAgICBjb25zdCBwYXRoID0gYCR7dGhpcy5wcmVmaXh9LyR7dGhpcy5wa2d9LiR7c2VydmljZX0vJHttZXRob2R9YDtcbiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChwYXRoLCB0aGlzLmhvc3QpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiBPYmplY3QuYXNzaWduKHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLTgnIH0sIGhlYWRlcnMpLFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFJlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzICR7cmVzcG9uc2Uuc3RhdHVzfTogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBhcnNlZFJlc3AgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHJldHVybiBjYW1lbGNhc2VLZXlzKHBhcnNlZFJlc3AsIHsgZGVlcDogdHJ1ZSB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ud2lycFJQQy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/WebhookReceiver.js":
/*!*****************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/WebhookReceiver.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebhookEvent: () => (/* binding */ WebhookEvent),\n/* harmony export */   WebhookReceiver: () => (/* binding */ WebhookReceiver),\n/* harmony export */   authorizeHeader: () => (/* binding */ authorizeHeader)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\");\n\n\nconst authorizeHeader = 'Authorize';\nclass WebhookEvent extends _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebhookEvent {\n    constructor() {\n        super(...arguments);\n        this.event = '';\n    }\n    static fromBinary(bytes, options) {\n        return new WebhookEvent().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new WebhookEvent().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new WebhookEvent().fromJsonString(jsonString, options);\n    }\n}\nclass WebhookReceiver {\n    constructor(apiKey, apiSecret) {\n        this.verifier = new _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.TokenVerifier(apiKey, apiSecret);\n    }\n    /**\n     *\n     * @param body string of the posted body\n     * @param authHeader `Authorization` header from the request\n     * @param skipAuth true to skip auth validation\n     * @returns\n     */\n    async receive(body, authHeader, skipAuth = false) {\n        // verify token\n        if (!skipAuth) {\n            if (!authHeader) {\n                throw new Error('authorization header is empty');\n            }\n            const claims = await this.verifier.verify(authHeader);\n            // confirm sha\n            const encoder = new TextEncoder();\n            const hash = await crypto.subtle.digest('SHA-256', encoder.encode(body));\n            const hashDecoded = btoa(Array.from(new Uint8Array(hash))\n                .map((v) => String.fromCharCode(v))\n                .join(''));\n            if (claims.sha256 !== hashDecoded) {\n                throw new Error('sha256 checksum of body does not match');\n            }\n        }\n        return WebhookEvent.fromJson(JSON.parse(body), { ignoreUnknownFields: true });\n    }\n}\n//# sourceMappingURL=WebhookReceiver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvV2ViaG9va1JlY2VpdmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNFO0FBQ3JCO0FBQzFDO0FBQ0EsMkJBQTJCLDJEQUFpQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLDRCQUE0QiwwREFBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCwyQkFBMkI7QUFDcEY7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L1dlYmhvb2tSZWNlaXZlci5qcz84YTlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdlYmhvb2tFdmVudCBhcyBQcm90b1dlYmhvb2tFdmVudCB9IGZyb20gJ0BsaXZla2l0L3Byb3RvY29sJztcbmltcG9ydCB7IFRva2VuVmVyaWZpZXIgfSBmcm9tICcuL0FjY2Vzc1Rva2VuLmpzJztcbmV4cG9ydCBjb25zdCBhdXRob3JpemVIZWFkZXIgPSAnQXV0aG9yaXplJztcbmV4cG9ydCBjbGFzcyBXZWJob29rRXZlbnQgZXh0ZW5kcyBQcm90b1dlYmhvb2tFdmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuZXZlbnQgPSAnJztcbiAgICB9XG4gICAgc3RhdGljIGZyb21CaW5hcnkoYnl0ZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBXZWJob29rRXZlbnQoKS5mcm9tQmluYXJ5KGJ5dGVzLCBvcHRpb25zKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IFdlYmhvb2tFdmVudCgpLmZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSnNvblN0cmluZyhqc29uU3RyaW5nLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgV2ViaG9va0V2ZW50KCkuZnJvbUpzb25TdHJpbmcoanNvblN0cmluZywgb3B0aW9ucyk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFdlYmhvb2tSZWNlaXZlciB7XG4gICAgY29uc3RydWN0b3IoYXBpS2V5LCBhcGlTZWNyZXQpIHtcbiAgICAgICAgdGhpcy52ZXJpZmllciA9IG5ldyBUb2tlblZlcmlmaWVyKGFwaUtleSwgYXBpU2VjcmV0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYm9keSBzdHJpbmcgb2YgdGhlIHBvc3RlZCBib2R5XG4gICAgICogQHBhcmFtIGF1dGhIZWFkZXIgYEF1dGhvcml6YXRpb25gIGhlYWRlciBmcm9tIHRoZSByZXF1ZXN0XG4gICAgICogQHBhcmFtIHNraXBBdXRoIHRydWUgdG8gc2tpcCBhdXRoIHZhbGlkYXRpb25cbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIGFzeW5jIHJlY2VpdmUoYm9keSwgYXV0aEhlYWRlciwgc2tpcEF1dGggPSBmYWxzZSkge1xuICAgICAgICAvLyB2ZXJpZnkgdG9rZW5cbiAgICAgICAgaWYgKCFza2lwQXV0aCkge1xuICAgICAgICAgICAgaWYgKCFhdXRoSGVhZGVyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdhdXRob3JpemF0aW9uIGhlYWRlciBpcyBlbXB0eScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgY2xhaW1zID0gYXdhaXQgdGhpcy52ZXJpZmllci52ZXJpZnkoYXV0aEhlYWRlcik7XG4gICAgICAgICAgICAvLyBjb25maXJtIHNoYVxuICAgICAgICAgICAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgICAgICAgICAgY29uc3QgaGFzaCA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuZGlnZXN0KCdTSEEtMjU2JywgZW5jb2Rlci5lbmNvZGUoYm9keSkpO1xuICAgICAgICAgICAgY29uc3QgaGFzaERlY29kZWQgPSBidG9hKEFycmF5LmZyb20obmV3IFVpbnQ4QXJyYXkoaGFzaCkpXG4gICAgICAgICAgICAgICAgLm1hcCgodikgPT4gU3RyaW5nLmZyb21DaGFyQ29kZSh2KSlcbiAgICAgICAgICAgICAgICAuam9pbignJykpO1xuICAgICAgICAgICAgaWYgKGNsYWltcy5zaGEyNTYgIT09IGhhc2hEZWNvZGVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdzaGEyNTYgY2hlY2tzdW0gb2YgYm9keSBkb2VzIG5vdCBtYXRjaCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBXZWJob29rRXZlbnQuZnJvbUpzb24oSlNPTi5wYXJzZShib2R5KSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdlYmhvb2tSZWNlaXZlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/WebhookReceiver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/grants.js":
/*!********************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/grants.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   claimsToJwtPayload: () => (/* binding */ claimsToJwtPayload),\n/* harmony export */   trackSourceToString: () => (/* binding */ trackSourceToString)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n\nfunction trackSourceToString(source) {\n    switch (source) {\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.CAMERA:\n            return 'camera';\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.MICROPHONE:\n            return 'microphone';\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.SCREEN_SHARE:\n            return 'screen_share';\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.SCREEN_SHARE_AUDIO:\n            return 'screen_share_audio';\n        default:\n            throw new TypeError(`Cannot convert TrackSource ${source} to string`);\n    }\n}\nfunction claimsToJwtPayload(grant) {\n    var _a;\n    const claim = Object.assign({}, grant);\n    // eslint-disable-next-line no-restricted-syntax\n    if (Array.isArray((_a = claim.video) === null || _a === void 0 ? void 0 : _a.canPublishSources)) {\n        claim.video.canPublishSources = claim.video.canPublishSources.map(trackSourceToString);\n    }\n    return claim;\n}\n//# sourceMappingURL=grants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvZ3JhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRDtBQUN6QztBQUNQO0FBQ0EsYUFBYSwwREFBVztBQUN4QjtBQUNBLGFBQWEsMERBQVc7QUFDeEI7QUFDQSxhQUFhLDBEQUFXO0FBQ3hCO0FBQ0EsYUFBYSwwREFBVztBQUN4QjtBQUNBO0FBQ0EsOERBQThELFFBQVE7QUFDdEU7QUFDQTtBQUNPO0FBQ1A7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvZ3JhbnRzLmpzP2E4ZjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJhY2tTb3VyY2UgfSBmcm9tICdAbGl2ZWtpdC9wcm90b2NvbCc7XG5leHBvcnQgZnVuY3Rpb24gdHJhY2tTb3VyY2VUb1N0cmluZyhzb3VyY2UpIHtcbiAgICBzd2l0Y2ggKHNvdXJjZSkge1xuICAgICAgICBjYXNlIFRyYWNrU291cmNlLkNBTUVSQTpcbiAgICAgICAgICAgIHJldHVybiAnY2FtZXJhJztcbiAgICAgICAgY2FzZSBUcmFja1NvdXJjZS5NSUNST1BIT05FOlxuICAgICAgICAgICAgcmV0dXJuICdtaWNyb3Bob25lJztcbiAgICAgICAgY2FzZSBUcmFja1NvdXJjZS5TQ1JFRU5fU0hBUkU6XG4gICAgICAgICAgICByZXR1cm4gJ3NjcmVlbl9zaGFyZSc7XG4gICAgICAgIGNhc2UgVHJhY2tTb3VyY2UuU0NSRUVOX1NIQVJFX0FVRElPOlxuICAgICAgICAgICAgcmV0dXJuICdzY3JlZW5fc2hhcmVfYXVkaW8nO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgQ2Fubm90IGNvbnZlcnQgVHJhY2tTb3VyY2UgJHtzb3VyY2V9IHRvIHN0cmluZ2ApO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBjbGFpbXNUb0p3dFBheWxvYWQoZ3JhbnQpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgY2xhaW0gPSBPYmplY3QuYXNzaWduKHt9LCBncmFudCk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoKF9hID0gY2xhaW0udmlkZW8pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYW5QdWJsaXNoU291cmNlcykpIHtcbiAgICAgICAgY2xhaW0udmlkZW8uY2FuUHVibGlzaFNvdXJjZXMgPSBjbGFpbS52aWRlby5jYW5QdWJsaXNoU291cmNlcy5tYXAodHJhY2tTb3VyY2VUb1N0cmluZyk7XG4gICAgfVxuICAgIHJldHVybiBjbGFpbTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdyYW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/grants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* reexport safe */ _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__.AccessToken),\n/* harmony export */   AliOSSUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.AliOSSUpload),\n/* harmony export */   AzureBlobUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.AzureBlobUpload),\n/* harmony export */   DataPacket_Kind: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.DataPacket_Kind),\n/* harmony export */   DirectFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.DirectFileOutput),\n/* harmony export */   EgressClient: () => (/* reexport safe */ _EgressClient_js__WEBPACK_IMPORTED_MODULE_1__.EgressClient),\n/* harmony export */   EgressInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.EgressInfo),\n/* harmony export */   EncodedFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.EncodedFileOutput),\n/* harmony export */   EncodedFileType: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.EncodedFileType),\n/* harmony export */   EncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.EncodingOptions),\n/* harmony export */   EncodingOptionsPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.EncodingOptionsPreset),\n/* harmony export */   GCPUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.GCPUpload),\n/* harmony export */   ImageOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.ImageOutput),\n/* harmony export */   IngressAudioEncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.IngressAudioEncodingOptions),\n/* harmony export */   IngressAudioEncodingPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.IngressAudioEncodingPreset),\n/* harmony export */   IngressAudioOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.IngressAudioOptions),\n/* harmony export */   IngressClient: () => (/* reexport safe */ _IngressClient_js__WEBPACK_IMPORTED_MODULE_2__.IngressClient),\n/* harmony export */   IngressInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.IngressInfo),\n/* harmony export */   IngressInput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.IngressInput),\n/* harmony export */   IngressState: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.IngressState),\n/* harmony export */   IngressVideoEncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.IngressVideoEncodingOptions),\n/* harmony export */   IngressVideoEncodingPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.IngressVideoEncodingPreset),\n/* harmony export */   IngressVideoOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.IngressVideoOptions),\n/* harmony export */   ParticipantEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.ParticipantEgressRequest),\n/* harmony export */   ParticipantInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.ParticipantInfo),\n/* harmony export */   ParticipantInfo_State: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.ParticipantInfo_State),\n/* harmony export */   ParticipantPermission: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.ParticipantPermission),\n/* harmony export */   Room: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.Room),\n/* harmony export */   RoomCompositeEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.RoomCompositeEgressRequest),\n/* harmony export */   RoomServiceClient: () => (/* reexport safe */ _RoomServiceClient_js__WEBPACK_IMPORTED_MODULE_4__.RoomServiceClient),\n/* harmony export */   S3Upload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.S3Upload),\n/* harmony export */   SIPDispatchRuleInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.SIPDispatchRuleInfo),\n/* harmony export */   SIPParticipantInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.SIPParticipantInfo),\n/* harmony export */   SIPTrunkInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.SIPTrunkInfo),\n/* harmony export */   SegmentedFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.SegmentedFileOutput),\n/* harmony export */   SegmentedFileProtocol: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.SegmentedFileProtocol),\n/* harmony export */   SipClient: () => (/* reexport safe */ _SipClient_js__WEBPACK_IMPORTED_MODULE_3__.SipClient),\n/* harmony export */   StreamOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.StreamOutput),\n/* harmony export */   StreamProtocol: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.StreamProtocol),\n/* harmony export */   TokenVerifier: () => (/* reexport safe */ _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__.TokenVerifier),\n/* harmony export */   TrackCompositeEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.TrackCompositeEgressRequest),\n/* harmony export */   TrackEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.TrackEgressRequest),\n/* harmony export */   TrackInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.TrackInfo),\n/* harmony export */   TrackSource: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.TrackSource),\n/* harmony export */   TrackType: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.TrackType),\n/* harmony export */   WebEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__.WebEgressRequest),\n/* harmony export */   WebhookEvent: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_5__.WebhookEvent),\n/* harmony export */   WebhookReceiver: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_5__.WebhookReceiver),\n/* harmony export */   authorizeHeader: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_5__.authorizeHeader),\n/* harmony export */   claimsToJwtPayload: () => (/* reexport safe */ _grants_js__WEBPACK_IMPORTED_MODULE_6__.claimsToJwtPayload),\n/* harmony export */   trackSourceToString: () => (/* reexport safe */ _grants_js__WEBPACK_IMPORTED_MODULE_6__.trackSourceToString)\n/* harmony export */ });\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\");\n/* harmony import */ var _EgressClient_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EgressClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/EgressClient.js\");\n/* harmony import */ var _IngressClient_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IngressClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/IngressClient.js\");\n/* harmony import */ var _SipClient_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SipClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/SipClient.js\");\n/* harmony import */ var _RoomServiceClient_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RoomServiceClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/RoomServiceClient.js\");\n/* harmony import */ var _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WebhookReceiver.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/WebhookReceiver.js\");\n/* harmony import */ var _grants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./grants.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/grants.js\");\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/src/index.js\");\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBaUM7QUFDQztBQUNDO0FBQ0o7QUFDUTtBQUNGO0FBQ1Q7QUFDMnVCO0FBQ3Z3QiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9saXZla2l0LXNlcnZlci1zZGsvZGlzdC9pbmRleC5qcz9jMzFjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vQWNjZXNzVG9rZW4uanMnO1xuZXhwb3J0ICogZnJvbSAnLi9FZ3Jlc3NDbGllbnQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9JbmdyZXNzQ2xpZW50LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vU2lwQ2xpZW50LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vUm9vbVNlcnZpY2VDbGllbnQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9XZWJob29rUmVjZWl2ZXIuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9ncmFudHMuanMnO1xuZXhwb3J0IHsgQWxpT1NTVXBsb2FkLCBBenVyZUJsb2JVcGxvYWQsIERpcmVjdEZpbGVPdXRwdXQsIEVncmVzc0luZm8sIEVuY29kZWRGaWxlT3V0cHV0LCBFbmNvZGVkRmlsZVR5cGUsIEVuY29kaW5nT3B0aW9ucywgRW5jb2RpbmdPcHRpb25zUHJlc2V0LCBHQ1BVcGxvYWQsIEltYWdlT3V0cHV0LCBQYXJ0aWNpcGFudEVncmVzc1JlcXVlc3QsIFJvb21Db21wb3NpdGVFZ3Jlc3NSZXF1ZXN0LCBTM1VwbG9hZCwgU2VnbWVudGVkRmlsZU91dHB1dCwgU2VnbWVudGVkRmlsZVByb3RvY29sLCBTdHJlYW1PdXRwdXQsIFN0cmVhbVByb3RvY29sLCBUcmFja0NvbXBvc2l0ZUVncmVzc1JlcXVlc3QsIFRyYWNrRWdyZXNzUmVxdWVzdCwgV2ViRWdyZXNzUmVxdWVzdCwgSW5ncmVzc0F1ZGlvRW5jb2RpbmdPcHRpb25zLCBJbmdyZXNzQXVkaW9FbmNvZGluZ1ByZXNldCwgSW5ncmVzc0F1ZGlvT3B0aW9ucywgSW5ncmVzc0luZm8sIEluZ3Jlc3NJbnB1dCwgSW5ncmVzc1N0YXRlLCBJbmdyZXNzVmlkZW9FbmNvZGluZ09wdGlvbnMsIEluZ3Jlc3NWaWRlb0VuY29kaW5nUHJlc2V0LCBJbmdyZXNzVmlkZW9PcHRpb25zLCBEYXRhUGFja2V0X0tpbmQsIFBhcnRpY2lwYW50SW5mbywgUGFydGljaXBhbnRJbmZvX1N0YXRlLCBQYXJ0aWNpcGFudFBlcm1pc3Npb24sIFJvb20sIFRyYWNrSW5mbywgVHJhY2tUeXBlLCBUcmFja1NvdXJjZSwgU0lQVHJ1bmtJbmZvLCBTSVBEaXNwYXRjaFJ1bGVJbmZvLCBTSVBQYXJ0aWNpcGFudEluZm8sIH0gZnJvbSAnQGxpdmVraXQvcHJvdG9jb2wnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/index.js\n");

/***/ })

};
;